{"version":3,"sources":["meteor://üíªapp/packages/rzymek_moment-locale-be/packages/rzymek_moment-locale-be.js"],"names":[],"mappingsfile":"/packages/rzymek_moment-locale-be.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// packages/rzymek:moment-locale-be/server.js                                                    //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\nglobal.moment = moment;                                                                          // 1\n                                                                                                 // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// packages/rzymek:moment-locale-be/locale.js                                                    //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\n// moment.js locale configuration                                                                // 1\n// locale : belarusian (be)                                                                      // 2\n// author : Dmitry Demidov : https://github.com/demidov91                                        // 3\n// author: Praleska: http://praleska.pro/                                                        // 4\n// Author : Menelion Elens√∫le : https://github.com/Oire                                          // 5\n                                                                                                 // 6\n(function (factory) {                                                                            // 7\n    if (typeof define === 'function' && define.amd) {                                            // 8\n        define(['moment'], factory); // AMD                                                      // 9\n    } else if (typeof exports === 'object') {                                                    // 10\n        module.exports = factory(require('../moment')); // Node                                  // 11\n    } else {                                                                                     // 12\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global // 13\n    }                                                                                            // 14\n}(function (moment) {                                                                            // 15\n    function plural(word, num) {                                                                 // 16\n        var forms = word.split('_');                                                             // 17\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }                                                                                            // 19\n                                                                                                 // 20\n    function relativeTimeWithPlural(number, withoutSuffix, key) {                                // 21\n        var format = {                                                                           // 22\n            'mm': withoutSuffix ? '—Ö–≤—ñ–ª—ñ–Ω–∞_—Ö–≤—ñ–ª—ñ–Ω—ã_—Ö–≤—ñ–ª—ñ–Ω' : '—Ö–≤—ñ–ª—ñ–Ω—É_—Ö–≤—ñ–ª—ñ–Ω—ã_—Ö–≤—ñ–ª—ñ–Ω',           // 23\n            'hh': withoutSuffix ? '–≥–∞–¥–∑—ñ–Ω–∞_–≥–∞–¥–∑—ñ–Ω—ã_–≥–∞–¥–∑—ñ–Ω' : '–≥–∞–¥–∑—ñ–Ω—É_–≥–∞–¥–∑—ñ–Ω—ã_–≥–∞–¥–∑—ñ–Ω',           // 24\n            'dd': '–¥–∑–µ–Ω—å_–¥–Ω—ñ_–¥–∑—ë–Ω',                                                              // 25\n            'MM': '–º–µ—Å—è—Ü_–º–µ—Å—è—Ü—ã_–º–µ—Å—è—Ü–∞—û',                                                        // 26\n            'yy': '–≥–æ–¥_–≥–∞–¥—ã_–≥–∞–¥–æ—û'                                                               // 27\n        };                                                                                       // 28\n        if (key === 'm') {                                                                       // 29\n            return withoutSuffix ? '—Ö–≤—ñ–ª—ñ–Ω–∞' : '—Ö–≤—ñ–ª—ñ–Ω—É';                                        // 30\n        }                                                                                        // 31\n        else if (key === 'h') {                                                                  // 32\n            return withoutSuffix ? '–≥–∞–¥–∑—ñ–Ω–∞' : '–≥–∞–¥–∑—ñ–Ω—É';                                        // 33\n        }                                                                                        // 34\n        else {                                                                                   // 35\n            return number + ' ' + plural(format[key], +number);                                  // 36\n        }                                                                                        // 37\n    }                                                                                            // 38\n                                                                                                 // 39\n    function monthsCaseReplace(m, format) {                                                      // 40\n        var months = {                                                                           // 41\n            'nominative': '—Å—Ç—É–¥–∑–µ–Ω—å_–ª—é—Ç—ã_—Å–∞–∫–∞–≤—ñ–∫_–∫—Ä–∞—Å–∞–≤—ñ–∫_—Ç—Ä–∞–≤–µ–Ω—å_—á—ç—Ä–≤–µ–Ω—å_–ª—ñ–ø–µ–Ω—å_–∂–Ω—ñ–≤–µ–Ω—å_–≤–µ—Ä–∞—Å–µ–Ω—å_–∫–∞—Å—Ç—Ä—ã—á–Ω—ñ–∫_–ª—ñ—Å—Ç–∞–ø–∞–¥_—Å–Ω–µ–∂–∞–Ω—å'.split('_'),\n            'accusative': '—Å—Ç—É–¥–∑–µ–Ω—è_–ª—é—Ç–∞–≥–∞_—Å–∞–∫–∞–≤—ñ–∫–∞_–∫—Ä–∞—Å–∞–≤—ñ–∫–∞_—Ç—Ä–∞—û–Ω—è_—á—ç—Ä–≤–µ–Ω—è_–ª—ñ–ø–µ–Ω—è_–∂–Ω—ñ—û–Ω—è_–≤–µ—Ä–∞—Å–Ω—è_–∫–∞—Å—Ç—Ä—ã—á–Ω—ñ–∫–∞_–ª—ñ—Å—Ç–∞–ø–∞–¥–∞_—Å–Ω–µ–∂–Ω—è'.split('_')\n        },                                                                                       // 44\n                                                                                                 // 45\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?                             // 46\n            'accusative' :                                                                       // 47\n            'nominative';                                                                        // 48\n                                                                                                 // 49\n        return months[nounCase][m.month()];                                                      // 50\n    }                                                                                            // 51\n                                                                                                 // 52\n    function weekdaysCaseReplace(m, format) {                                                    // 53\n        var weekdays = {                                                                         // 54\n            'nominative': '–Ω—è–¥–∑–µ–ª—è_–ø–∞–Ω—è–¥–∑–µ–ª–∞–∫_–∞—û—Ç–æ—Ä–∞–∫_—Å–µ—Ä–∞–¥–∞_—á–∞—Ü–≤–µ—Ä_–ø—è—Ç–Ω—ñ—Ü–∞_—Å—É–±–æ—Ç–∞'.split('_'),  // 55\n            'accusative': '–Ω—è–¥–∑–µ–ª—é_–ø–∞–Ω—è–¥–∑–µ–ª–∞–∫_–∞—û—Ç–æ—Ä–∞–∫_—Å–µ—Ä–∞–¥—É_—á–∞—Ü–≤–µ—Ä_–ø—è—Ç–Ω—ñ—Ü—É_—Å—É–±–æ—Ç—É'.split('_')   // 56\n        },                                                                                       // 57\n                                                                                                 // 58\n        nounCase = (/\\[ ?[–í–≤] ?(?:–º—ñ–Ω—É–ª—É—é|–Ω–∞—Å—Ç—É–ø–Ω—É—é)? ?\\] ?dddd/).test(format) ?                 // 59\n            'accusative' :                                                                       // 60\n            'nominative';                                                                        // 61\n                                                                                                 // 62\n        return weekdays[nounCase][m.day()];                                                      // 63\n    }                                                                                            // 64\n                                                                                                 // 65\n    return moment.defineLocale('be', {                                                           // 66\n        months : monthsCaseReplace,                                                              // 67\n        monthsShort : '—Å—Ç—É–¥_–ª—é—Ç_—Å–∞–∫_–∫—Ä–∞—Å_—Ç—Ä–∞–≤_—á—ç—Ä–≤_–ª—ñ–ø_–∂–Ω—ñ–≤_–≤–µ—Ä_–∫–∞—Å—Ç_–ª—ñ—Å—Ç_—Å–Ω–µ–∂'.split('_'),      // 68\n        weekdays : weekdaysCaseReplace,                                                          // 69\n        weekdaysShort : '–Ω–¥_–ø–Ω_–∞—Ç_—Å—Ä_—á—Ü_–ø—Ç_—Å–±'.split('_'),                                       // 70\n        weekdaysMin : '–Ω–¥_–ø–Ω_–∞—Ç_—Å—Ä_—á—Ü_–ø—Ç_—Å–±'.split('_'),                                         // 71\n        longDateFormat : {                                                                       // 72\n            LT : 'HH:mm',                                                                        // 73\n            LTS : 'LT:ss',                                                                       // 74\n            L : 'DD.MM.YYYY',                                                                    // 75\n            LL : 'D MMMM YYYY –≥.',                                                               // 76\n            LLL : 'D MMMM YYYY –≥., LT',                                                          // 77\n            LLLL : 'dddd, D MMMM YYYY –≥., LT'                                                    // 78\n        },                                                                                       // 79\n        calendar : {                                                                             // 80\n            sameDay: '[–°—ë–Ω–Ω—è —û] LT',                                                             // 81\n            nextDay: '[–ó–∞—û—Ç—Ä–∞ —û] LT',                                                            // 82\n            lastDay: '[–£—á–æ—Ä–∞ —û] LT',                                                             // 83\n            nextWeek: function () {                                                              // 84\n                return '[–£] dddd [—û] LT';                                                        // 85\n            },                                                                                   // 86\n            lastWeek: function () {                                                              // 87\n                switch (this.day()) {                                                            // 88\n                case 0:                                                                          // 89\n                case 3:                                                                          // 90\n                case 5:                                                                          // 91\n                case 6:                                                                          // 92\n                    return '[–£ –º—ñ–Ω—É–ª—É—é] dddd [—û] LT';                                            // 93\n                case 1:                                                                          // 94\n                case 2:                                                                          // 95\n                case 4:                                                                          // 96\n                    return '[–£ –º—ñ–Ω—É–ª—ã] dddd [—û] LT';                                             // 97\n                }                                                                                // 98\n            },                                                                                   // 99\n            sameElse: 'L'                                                                        // 100\n        },                                                                                       // 101\n        relativeTime : {                                                                         // 102\n            future : '–ø—Ä–∞–∑ %s',                                                                  // 103\n            past : '%s —Ç–∞–º—É',                                                                    // 104\n            s : '–Ω–µ–∫–∞–ª—å–∫—ñ —Å–µ–∫—É–Ω–¥',                                                               // 105\n            m : relativeTimeWithPlural,                                                          // 106\n            mm : relativeTimeWithPlural,                                                         // 107\n            h : relativeTimeWithPlural,                                                          // 108\n            hh : relativeTimeWithPlural,                                                         // 109\n            d : '–¥–∑–µ–Ω—å',                                                                         // 110\n            dd : relativeTimeWithPlural,                                                         // 111\n            M : '–º–µ—Å—è—Ü',                                                                         // 112\n            MM : relativeTimeWithPlural,                                                         // 113\n            y : '–≥–æ–¥',                                                                           // 114\n            yy : relativeTimeWithPlural                                                          // 115\n        },                                                                                       // 116\n        meridiemParse: /–Ω–æ—á—ã|—Ä–∞–Ω—ñ—Ü—ã|–¥–Ω—è|–≤–µ—á–∞—Ä–∞/,                                                 // 117\n        isPM : function (input) {                                                                // 118\n            return /^(–¥–Ω—è|–≤–µ—á–∞—Ä–∞)$/.test(input);                                                 // 119\n        },                                                                                       // 120\n        meridiem : function (hour, minute, isLower) {                                            // 121\n            if (hour < 4) {                                                                      // 122\n                return '–Ω–æ—á—ã';                                                                   // 123\n            } else if (hour < 12) {                                                              // 124\n                return '—Ä–∞–Ω—ñ—Ü—ã';                                                                 // 125\n            } else if (hour < 17) {                                                              // 126\n                return '–¥–Ω—è';                                                                    // 127\n            } else {                                                                             // 128\n                return '–≤–µ—á–∞—Ä–∞';                                                                 // 129\n            }                                                                                    // 130\n        },                                                                                       // 131\n                                                                                                 // 132\n        ordinalParse: /\\d{1,2}-(—ñ|—ã|–≥–∞)/,                                                        // 133\n        ordinal: function (number, period) {                                                     // 134\n            switch (period) {                                                                    // 135\n            case 'M':                                                                            // 136\n            case 'd':                                                                            // 137\n            case 'DDD':                                                                          // 138\n            case 'w':                                                                            // 139\n            case 'W':                                                                            // 140\n                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-—ñ' : number + '-—ã';\n            case 'D':                                                                            // 142\n                return number + '-–≥–∞';                                                           // 143\n            default:                                                                             // 144\n                return number;                                                                   // 145\n            }                                                                                    // 146\n        },                                                                                       // 147\n                                                                                                 // 148\n        week : {                                                                                 // 149\n            dow : 1, // Monday is the first day of the week.                                     // 150\n            doy : 7  // The week that contains Jan 1st is the first week of the year.            // 151\n        }                                                                                        // 152\n    });                                                                                          // 153\n}));                                                                                             // 154\n                                                                                                 // 155\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}