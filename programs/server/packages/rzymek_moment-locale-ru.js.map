{"version":3,"sources":["meteor://üíªapp/packages/rzymek_moment-locale-ru/packages/rzymek_moment-locale-ru.js"],"names":[],"mappingsmH","file":"/packages/rzymek_moment-locale-ru.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/rzymek:moment-locale-ru/server.js                                                         //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nglobal.moment = moment;                                                                               // 1\n                                                                                                      // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/rzymek:moment-locale-ru/locale.js                                                         //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\n// moment.js locale configuration                                                                     // 1\n// locale : russian (ru)                                                                              // 2\n// author : Viktorminator : https://github.com/Viktorminator                                          // 3\n// Author : Menelion Elens√∫le : https://github.com/Oire                                               // 4\n                                                                                                      // 5\n(function (factory) {                                                                                 // 6\n    if (typeof define === 'function' && define.amd) {                                                 // 7\n        define(['moment'], factory); // AMD                                                           // 8\n    } else if (typeof exports === 'object') {                                                         // 9\n        module.exports = factory(require('../moment')); // Node                                       // 10\n    } else {                                                                                          // 11\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global      // 12\n    }                                                                                                 // 13\n}(function (moment) {                                                                                 // 14\n    function plural(word, num) {                                                                      // 15\n        var forms = word.split('_');                                                                  // 16\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }                                                                                                 // 18\n                                                                                                      // 19\n    function relativeTimeWithPlural(number, withoutSuffix, key) {                                     // 20\n        var format = {                                                                                // 21\n            'mm': withoutSuffix ? '–º–∏–Ω—É—Ç–∞_–º–∏–Ω—É—Ç—ã_–º–∏–Ω—É—Ç' : '–º–∏–Ω—É—Ç—É_–º–∏–Ω—É—Ç—ã_–º–∏–Ω—É—Ç',                      // 22\n            'hh': '—á–∞—Å_—á–∞—Å–∞_—á–∞—Å–æ–≤',                                                                   // 23\n            'dd': '–¥–µ–Ω—å_–¥–Ω—è_–¥–Ω–µ–π',                                                                    // 24\n            'MM': '–º–µ—Å—è—Ü_–º–µ—Å—è—Ü–∞_–º–µ—Å—è—Ü–µ–≤',                                                             // 25\n            'yy': '–≥–æ–¥_–≥–æ–¥–∞_–ª–µ—Ç'                                                                      // 26\n        };                                                                                            // 27\n        if (key === 'm') {                                                                            // 28\n            return withoutSuffix ? '–º–∏–Ω—É—Ç–∞' : '–º–∏–Ω—É—Ç—É';                                               // 29\n        }                                                                                             // 30\n        else {                                                                                        // 31\n            return number + ' ' + plural(format[key], +number);                                       // 32\n        }                                                                                             // 33\n    }                                                                                                 // 34\n                                                                                                      // 35\n    function monthsCaseReplace(m, format) {                                                           // 36\n        var months = {                                                                                // 37\n            'nominative': '—è–Ω–≤–∞—Ä—å_—Ñ–µ–≤—Ä–∞–ª—å_–º–∞—Ä—Ç_–∞–ø—Ä–µ–ª—å_–º–∞–π_–∏—é–Ω—å_–∏—é–ª—å_–∞–≤–≥—É—Å—Ç_—Å–µ–Ω—Ç—è–±—Ä—å_–æ–∫—Ç—è–±—Ä—å_–Ω–æ—è–±—Ä—å_–¥–µ–∫–∞–±—Ä—å'.split('_'),\n            'accusative': '—è–Ω–≤–∞—Ä—è_—Ñ–µ–≤—Ä–∞–ª—è_–º–∞—Ä—Ç–∞_–∞–ø—Ä–µ–ª—è_–º–∞—è_–∏—é–Ω—è_–∏—é–ª—è_–∞–≤–≥—É—Å—Ç–∞_—Å–µ–Ω—Ç—è–±—Ä—è_–æ–∫—Ç—è–±—Ä—è_–Ω–æ—è–±—Ä—è_–¥–µ–∫–∞–±—Ä—è'.split('_')\n        },                                                                                            // 40\n                                                                                                      // 41\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?                                  // 42\n            'accusative' :                                                                            // 43\n            'nominative';                                                                             // 44\n                                                                                                      // 45\n        return months[nounCase][m.month()];                                                           // 46\n    }                                                                                                 // 47\n                                                                                                      // 48\n    function monthsShortCaseReplace(m, format) {                                                      // 49\n        var monthsShort = {                                                                           // 50\n            'nominative': '—è–Ω–≤_—Ñ–µ–≤_–º–∞—Ä—Ç_–∞–ø—Ä_–º–∞–π_–∏—é–Ω—å_–∏—é–ª—å_–∞–≤–≥_—Å–µ–Ω_–æ–∫—Ç_–Ω–æ—è_–¥–µ–∫'.split('_'),            // 51\n            'accusative': '—è–Ω–≤_—Ñ–µ–≤_–º–∞—Ä_–∞–ø—Ä_–º–∞—è_–∏—é–Ω—è_–∏—é–ª—è_–∞–≤–≥_—Å–µ–Ω_–æ–∫—Ç_–Ω–æ—è_–¥–µ–∫'.split('_')              // 52\n        },                                                                                            // 53\n                                                                                                      // 54\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?                                  // 55\n            'accusative' :                                                                            // 56\n            'nominative';                                                                             // 57\n                                                                                                      // 58\n        return monthsShort[nounCase][m.month()];                                                      // 59\n    }                                                                                                 // 60\n                                                                                                      // 61\n    function weekdaysCaseReplace(m, format) {                                                         // 62\n        var weekdays = {                                                                              // 63\n            'nominative': '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ_–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫_–≤—Ç–æ—Ä–Ω–∏–∫_—Å—Ä–µ–¥–∞_—á–µ—Ç–≤–µ—Ä–≥_–ø—è—Ç–Ω–∏—Ü–∞_—Å—É–±–±–æ—Ç–∞'.split('_'), // 64\n            'accusative': '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ_–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫_–≤—Ç–æ—Ä–Ω–∏–∫_—Å—Ä–µ–¥—É_—á–µ—Ç–≤–µ—Ä–≥_–ø—è—Ç–Ω–∏—Ü—É_—Å—É–±–±–æ—Ç—É'.split('_')  // 65\n        },                                                                                            // 66\n                                                                                                      // 67\n        nounCase = (/\\[ ?[–í–≤] ?(?:–ø—Ä–æ—à–ª—É—é|—Å–ª–µ–¥—É—é—â—É—é|—ç—Ç—É)? ?\\] ?dddd/).test(format) ?                  // 68\n            'accusative' :                                                                            // 69\n            'nominative';                                                                             // 70\n                                                                                                      // 71\n        return weekdays[nounCase][m.day()];                                                           // 72\n    }                                                                                                 // 73\n                                                                                                      // 74\n    return moment.defineLocale('ru', {                                                                // 75\n        months : monthsCaseReplace,                                                                   // 76\n        monthsShort : monthsShortCaseReplace,                                                         // 77\n        weekdays : weekdaysCaseReplace,                                                               // 78\n        weekdaysShort : '–≤—Å_–ø–Ω_–≤—Ç_—Å—Ä_—á—Ç_–ø—Ç_—Å–±'.split('_'),                                            // 79\n        weekdaysMin : '–≤—Å_–ø–Ω_–≤—Ç_—Å—Ä_—á—Ç_–ø—Ç_—Å–±'.split('_'),                                              // 80\n        monthsParse : [/^—è–Ω–≤/i, /^—Ñ–µ–≤/i, /^–º–∞—Ä/i, /^–∞–ø—Ä/i, /^–º–∞[–π|—è]/i, /^–∏—é–Ω/i, /^–∏—é–ª/i, /^–∞–≤–≥/i, /^—Å–µ–Ω/i, /^–æ–∫—Ç/i, /^–Ω–æ—è/i, /^–¥–µ–∫/i],\n        longDateFormat : {                                                                            // 82\n            LT : 'HH:mm',                                                                             // 83\n            LTS : 'LT:ss',                                                                            // 84\n            L : 'DD.MM.YYYY',                                                                         // 85\n            LL : 'D MMMM YYYY –≥.',                                                                    // 86\n            LLL : 'D MMMM YYYY –≥., LT',                                                               // 87\n            LLLL : 'dddd, D MMMM YYYY –≥., LT'                                                         // 88\n        },                                                                                            // 89\n        calendar : {                                                                                  // 90\n            sameDay: '[–°–µ–≥–æ–¥–Ω—è –≤] LT',                                                                // 91\n            nextDay: '[–ó–∞–≤—Ç—Ä–∞ –≤] LT',                                                                 // 92\n            lastDay: '[–í—á–µ—Ä–∞ –≤] LT',                                                                  // 93\n            nextWeek: function () {                                                                   // 94\n                return this.day() === 2 ? '[–í–æ] dddd [–≤] LT' : '[–í] dddd [–≤] LT';                     // 95\n            },                                                                                        // 96\n            lastWeek: function (now) {                                                                // 97\n                if (now.week() !== this.week()) {                                                     // 98\n                    switch (this.day()) {                                                             // 99\n                    case 0:                                                                           // 100\n                        return '[–í –ø—Ä–æ—à–ª–æ–µ] dddd [–≤] LT';                                             // 101\n                    case 1:                                                                           // 102\n                    case 2:                                                                           // 103\n                    case 4:                                                                           // 104\n                        return '[–í –ø—Ä–æ—à–ª—ã–π] dddd [–≤] LT';                                             // 105\n                    case 3:                                                                           // 106\n                    case 5:                                                                           // 107\n                    case 6:                                                                           // 108\n                        return '[–í –ø—Ä–æ—à–ª—É—é] dddd [–≤] LT';                                             // 109\n                    }                                                                                 // 110\n                } else {                                                                              // 111\n                    if (this.day() === 2) {                                                           // 112\n                        return '[–í–æ] dddd [–≤] LT';                                                    // 113\n                    } else {                                                                          // 114\n                        return '[–í] dddd [–≤] LT';                                                     // 115\n                    }                                                                                 // 116\n                }                                                                                     // 117\n            },                                                                                        // 118\n            sameElse: 'L'                                                                             // 119\n        },                                                                                            // 120\n        relativeTime : {                                                                              // 121\n            future : '—á–µ—Ä–µ–∑ %s',                                                                      // 122\n            past : '%s –Ω–∞–∑–∞–¥',                                                                        // 123\n            s : '–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥',                                                                   // 124\n            m : relativeTimeWithPlural,                                                               // 125\n            mm : relativeTimeWithPlural,                                                              // 126\n            h : '—á–∞—Å',                                                                                // 127\n            hh : relativeTimeWithPlural,                                                              // 128\n            d : '–¥–µ–Ω—å',                                                                               // 129\n            dd : relativeTimeWithPlural,                                                              // 130\n            M : '–º–µ—Å—è—Ü',                                                                              // 131\n            MM : relativeTimeWithPlural,                                                              // 132\n            y : '–≥–æ–¥',                                                                                // 133\n            yy : relativeTimeWithPlural                                                               // 134\n        },                                                                                            // 135\n                                                                                                      // 136\n        meridiemParse: /–Ω–æ—á–∏|—É—Ç—Ä–∞|–¥–Ω—è|–≤–µ—á–µ—Ä–∞/i,                                                       // 137\n        isPM : function (input) {                                                                     // 138\n            return /^(–¥–Ω—è|–≤–µ—á–µ—Ä–∞)$/.test(input);                                                      // 139\n        },                                                                                            // 140\n                                                                                                      // 141\n        meridiem : function (hour, minute, isLower) {                                                 // 142\n            if (hour < 4) {                                                                           // 143\n                return '–Ω–æ—á–∏';                                                                        // 144\n            } else if (hour < 12) {                                                                   // 145\n                return '—É—Ç—Ä–∞';                                                                        // 146\n            } else if (hour < 17) {                                                                   // 147\n                return '–¥–Ω—è';                                                                         // 148\n            } else {                                                                                  // 149\n                return '–≤–µ—á–µ—Ä–∞';                                                                      // 150\n            }                                                                                         // 151\n        },                                                                                            // 152\n                                                                                                      // 153\n        ordinalParse: /\\d{1,2}-(–π|–≥–æ|—è)/,                                                             // 154\n        ordinal: function (number, period) {                                                          // 155\n            switch (period) {                                                                         // 156\n            case 'M':                                                                                 // 157\n            case 'd':                                                                                 // 158\n            case 'DDD':                                                                               // 159\n                return number + '-–π';                                                                 // 160\n            case 'D':                                                                                 // 161\n                return number + '-–≥–æ';                                                                // 162\n            case 'w':                                                                                 // 163\n            case 'W':                                                                                 // 164\n                return number + '-—è';                                                                 // 165\n            default:                                                                                  // 166\n                return number;                                                                        // 167\n            }                                                                                         // 168\n        },                                                                                            // 169\n                                                                                                      // 170\n        week : {                                                                                      // 171\n            dow : 1, // Monday is the first day of the week.                                          // 172\n            doy : 7  // The week that contains Jan 1st is the first week of the year.                 // 173\n        }                                                                                             // 174\n    });                                                                                               // 175\n}));                                                                                                  // 176\n                                                                                                      // 177\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}