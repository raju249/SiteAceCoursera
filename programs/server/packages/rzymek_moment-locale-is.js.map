{"version":3,"sources":["meteor://üíªapp/packages/rzymek_moment-locale-is/packages/rzymek_moment-locale-is.js"],"names":[],"mappingsfile":"/packages/rzymek_moment-locale-is.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/rzymek:moment-locale-is/server.js                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nglobal.moment = moment;                                                                                           // 1\n                                                                                                                  // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/rzymek:moment-locale-is/locale.js                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// moment.js locale configuration                                                                                 // 1\n// locale : icelandic (is)                                                                                        // 2\n// author : Hinrik √ñrn Sigur√∞sson : https://github.com/hinrik                                                     // 3\n                                                                                                                  // 4\n(function (factory) {                                                                                             // 5\n    if (typeof define === 'function' && define.amd) {                                                             // 6\n        define(['moment'], factory); // AMD                                                                       // 7\n    } else if (typeof exports === 'object') {                                                                     // 8\n        module.exports = factory(require('../moment')); // Node                                                   // 9\n    } else {                                                                                                      // 10\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global                  // 11\n    }                                                                                                             // 12\n}(function (moment) {                                                                                             // 13\n    function plural(n) {                                                                                          // 14\n        if (n % 100 === 11) {                                                                                     // 15\n            return true;                                                                                          // 16\n        } else if (n % 10 === 1) {                                                                                // 17\n            return false;                                                                                         // 18\n        }                                                                                                         // 19\n        return true;                                                                                              // 20\n    }                                                                                                             // 21\n                                                                                                                  // 22\n    function translate(number, withoutSuffix, key, isFuture) {                                                    // 23\n        var result = number + ' ';                                                                                // 24\n        switch (key) {                                                                                            // 25\n        case 's':                                                                                                 // 26\n            return withoutSuffix || isFuture ? 'nokkrar sek√∫ndur' : 'nokkrum sek√∫ndum';                           // 27\n        case 'm':                                                                                                 // 28\n            return withoutSuffix ? 'm√≠n√∫ta' : 'm√≠n√∫tu';                                                           // 29\n        case 'mm':                                                                                                // 30\n            if (plural(number)) {                                                                                 // 31\n                return result + (withoutSuffix || isFuture ? 'm√≠n√∫tur' : 'm√≠n√∫tum');                              // 32\n            } else if (withoutSuffix) {                                                                           // 33\n                return result + 'm√≠n√∫ta';                                                                         // 34\n            }                                                                                                     // 35\n            return result + 'm√≠n√∫tu';                                                                             // 36\n        case 'hh':                                                                                                // 37\n            if (plural(number)) {                                                                                 // 38\n                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');                  // 39\n            }                                                                                                     // 40\n            return result + 'klukkustund';                                                                        // 41\n        case 'd':                                                                                                 // 42\n            if (withoutSuffix) {                                                                                  // 43\n                return 'dagur';                                                                                   // 44\n            }                                                                                                     // 45\n            return isFuture ? 'dag' : 'degi';                                                                     // 46\n        case 'dd':                                                                                                // 47\n            if (plural(number)) {                                                                                 // 48\n                if (withoutSuffix) {                                                                              // 49\n                    return result + 'dagar';                                                                      // 50\n                }                                                                                                 // 51\n                return result + (isFuture ? 'daga' : 'd√∂gum');                                                    // 52\n            } else if (withoutSuffix) {                                                                           // 53\n                return result + 'dagur';                                                                          // 54\n            }                                                                                                     // 55\n            return result + (isFuture ? 'dag' : 'degi');                                                          // 56\n        case 'M':                                                                                                 // 57\n            if (withoutSuffix) {                                                                                  // 58\n                return 'm√°nu√∞ur';                                                                                 // 59\n            }                                                                                                     // 60\n            return isFuture ? 'm√°nu√∞' : 'm√°nu√∞i';                                                                 // 61\n        case 'MM':                                                                                                // 62\n            if (plural(number)) {                                                                                 // 63\n                if (withoutSuffix) {                                                                              // 64\n                    return result + 'm√°nu√∞ir';                                                                    // 65\n                }                                                                                                 // 66\n                return result + (isFuture ? 'm√°nu√∞i' : 'm√°nu√∞um');                                                // 67\n            } else if (withoutSuffix) {                                                                           // 68\n                return result + 'm√°nu√∞ur';                                                                        // 69\n            }                                                                                                     // 70\n            return result + (isFuture ? 'm√°nu√∞' : 'm√°nu√∞i');                                                      // 71\n        case 'y':                                                                                                 // 72\n            return withoutSuffix || isFuture ? '√°r' : '√°ri';                                                      // 73\n        case 'yy':                                                                                                // 74\n            if (plural(number)) {                                                                                 // 75\n                return result + (withoutSuffix || isFuture ? '√°r' : '√°rum');                                      // 76\n            }                                                                                                     // 77\n            return result + (withoutSuffix || isFuture ? '√°r' : '√°ri');                                           // 78\n        }                                                                                                         // 79\n    }                                                                                                             // 80\n                                                                                                                  // 81\n    return moment.defineLocale('is', {                                                                            // 82\n        months : 'jan√∫ar_febr√∫ar_mars_apr√≠l_ma√≠_j√∫n√≠_j√∫l√≠_√°g√∫st_september_okt√≥ber_n√≥vember_desember'.split('_'),  // 83\n        monthsShort : 'jan_feb_mar_apr_ma√≠_j√∫n_j√∫l_√°g√∫_sep_okt_n√≥v_des'.split('_'),                               // 84\n        weekdays : 'sunnudagur_m√°nudagur_√æri√∞judagur_mi√∞vikudagur_fimmtudagur_f√∂studagur_laugardagur'.split('_'), // 85\n        weekdaysShort : 'sun_m√°n_√æri_mi√∞_fim_f√∂s_lau'.split('_'),                                                 // 86\n        weekdaysMin : 'Su_M√°_√ûr_Mi_Fi_F√∂_La'.split('_'),                                                          // 87\n        longDateFormat : {                                                                                        // 88\n            LT : 'H:mm',                                                                                          // 89\n            LTS : 'LT:ss',                                                                                        // 90\n            L : 'DD/MM/YYYY',                                                                                     // 91\n            LL : 'D. MMMM YYYY',                                                                                  // 92\n            LLL : 'D. MMMM YYYY [kl.] LT',                                                                        // 93\n            LLLL : 'dddd, D. MMMM YYYY [kl.] LT'                                                                  // 94\n        },                                                                                                        // 95\n        calendar : {                                                                                              // 96\n            sameDay : '[√≠ dag kl.] LT',                                                                           // 97\n            nextDay : '[√° morgun kl.] LT',                                                                        // 98\n            nextWeek : 'dddd [kl.] LT',                                                                           // 99\n            lastDay : '[√≠ g√¶r kl.] LT',                                                                           // 100\n            lastWeek : '[s√≠√∞asta] dddd [kl.] LT',                                                                 // 101\n            sameElse : 'L'                                                                                        // 102\n        },                                                                                                        // 103\n        relativeTime : {                                                                                          // 104\n            future : 'eftir %s',                                                                                  // 105\n            past : 'fyrir %s s√≠√∞an',                                                                              // 106\n            s : translate,                                                                                        // 107\n            m : translate,                                                                                        // 108\n            mm : translate,                                                                                       // 109\n            h : 'klukkustund',                                                                                    // 110\n            hh : translate,                                                                                       // 111\n            d : translate,                                                                                        // 112\n            dd : translate,                                                                                       // 113\n            M : translate,                                                                                        // 114\n            MM : translate,                                                                                       // 115\n            y : translate,                                                                                        // 116\n            yy : translate                                                                                        // 117\n        },                                                                                                        // 118\n        ordinalParse: /\\d{1,2}\\./,                                                                                // 119\n        ordinal : '%d.',                                                                                          // 120\n        week : {                                                                                                  // 121\n            dow : 1, // Monday is the first day of the week.                                                      // 122\n            doy : 4  // The week that contains Jan 4th is the first week of the year.                             // 123\n        }                                                                                                         // 124\n    });                                                                                                           // 125\n}));                                                                                                              // 126\n                                                                                                                  // 127\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}