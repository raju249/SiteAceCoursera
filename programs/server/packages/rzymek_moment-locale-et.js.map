{"version":3,"sources":["meteor://üíªapp/packages/rzymek_moment-locale-et/packages/rzymek_moment-locale-et.js"],"names":[],"mappingsiH","file":"/packages/rzymek_moment-locale-et.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// packages/rzymek:moment-locale-et/server.js                                                        //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nglobal.moment = moment;                                                                              // 1\n                                                                                                     // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// packages/rzymek:moment-locale-et/locale.js                                                        //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\n// moment.js locale configuration                                                                    // 1\n// locale : estonian (et)                                                                            // 2\n// author : Henry Kehlmann : https://github.com/madhenry                                             // 3\n// improvements : Illimar Tambek : https://github.com/ragulka                                        // 4\n                                                                                                     // 5\n(function (factory) {                                                                                // 6\n    if (typeof define === 'function' && define.amd) {                                                // 7\n        define(['moment'], factory); // AMD                                                          // 8\n    } else if (typeof exports === 'object') {                                                        // 9\n        module.exports = factory(require('../moment')); // Node                                      // 10\n    } else {                                                                                         // 11\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global     // 12\n    }                                                                                                // 13\n}(function (moment) {                                                                                // 14\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {                             // 15\n        var format = {                                                                               // 16\n            's' : ['m√µne sekundi', 'm√µni sekund', 'paar sekundit'],                                  // 17\n            'm' : ['√ºhe minuti', '√ºks minut'],                                                       // 18\n            'mm': [number + ' minuti', number + ' minutit'],                                         // 19\n            'h' : ['√ºhe tunni', 'tund aega', '√ºks tund'],                                            // 20\n            'hh': [number + ' tunni', number + ' tundi'],                                            // 21\n            'd' : ['√ºhe p√§eva', '√ºks p√§ev'],                                                         // 22\n            'M' : ['kuu aja', 'kuu aega', '√ºks kuu'],                                                // 23\n            'MM': [number + ' kuu', number + ' kuud'],                                               // 24\n            'y' : ['√ºhe aasta', 'aasta', '√ºks aasta'],                                               // 25\n            'yy': [number + ' aasta', number + ' aastat']                                            // 26\n        };                                                                                           // 27\n        if (withoutSuffix) {                                                                         // 28\n            return format[key][2] ? format[key][2] : format[key][1];                                 // 29\n        }                                                                                            // 30\n        return isFuture ? format[key][0] : format[key][1];                                           // 31\n    }                                                                                                // 32\n                                                                                                     // 33\n    return moment.defineLocale('et', {                                                               // 34\n        months        : 'jaanuar_veebruar_m√§rts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_m√§rts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),     // 36\n        weekdays      : 'p√ºhap√§ev_esmasp√§ev_teisip√§ev_kolmap√§ev_neljap√§ev_reede_laup√§ev'.split('_'), // 37\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),                                                  // 38\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),                                                  // 39\n        longDateFormat : {                                                                           // 40\n            LT   : 'H:mm',                                                                           // 41\n            LTS : 'LT:ss',                                                                           // 42\n            L    : 'DD.MM.YYYY',                                                                     // 43\n            LL   : 'D. MMMM YYYY',                                                                   // 44\n            LLL  : 'D. MMMM YYYY LT',                                                                // 45\n            LLLL : 'dddd, D. MMMM YYYY LT'                                                           // 46\n        },                                                                                           // 47\n        calendar : {                                                                                 // 48\n            sameDay  : '[T√§na,] LT',                                                                 // 49\n            nextDay  : '[Homme,] LT',                                                                // 50\n            nextWeek : '[J√§rgmine] dddd LT',                                                         // 51\n            lastDay  : '[Eile,] LT',                                                                 // 52\n            lastWeek : '[Eelmine] dddd LT',                                                          // 53\n            sameElse : 'L'                                                                           // 54\n        },                                                                                           // 55\n        relativeTime : {                                                                             // 56\n            future : '%s p√§rast',                                                                    // 57\n            past   : '%s tagasi',                                                                    // 58\n            s      : processRelativeTime,                                                            // 59\n            m      : processRelativeTime,                                                            // 60\n            mm     : processRelativeTime,                                                            // 61\n            h      : processRelativeTime,                                                            // 62\n            hh     : processRelativeTime,                                                            // 63\n            d      : processRelativeTime,                                                            // 64\n            dd     : '%d p√§eva',                                                                     // 65\n            M      : processRelativeTime,                                                            // 66\n            MM     : processRelativeTime,                                                            // 67\n            y      : processRelativeTime,                                                            // 68\n            yy     : processRelativeTime                                                             // 69\n        },                                                                                           // 70\n        ordinalParse: /\\d{1,2}\\./,                                                                   // 71\n        ordinal : '%d.',                                                                             // 72\n        week : {                                                                                     // 73\n            dow : 1, // Monday is the first day of the week.                                         // 74\n            doy : 4  // The week that contains Jan 4th is the first week of the year.                // 75\n        }                                                                                            // 76\n    });                                                                                              // 77\n}));                                                                                                 // 78\n                                                                                                     // 79\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}