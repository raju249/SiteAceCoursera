{"version":3,"sources":["meteor://游눹app/packages/rzymek_moment-locale-cs/packages/rzymek_moment-locale-cs.js"],"names":[],"mappingsfile":"/packages/rzymek_moment-locale-cs.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/rzymek:moment-locale-cs/server.js                                                                    //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nglobal.moment = moment;                                                                                          // 1\n                                                                                                                 // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/rzymek:moment-locale-cs/locale.js                                                                    //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n// moment.js locale configuration                                                                                // 1\n// locale : czech (cs)                                                                                           // 2\n// author : petrbela : https://github.com/petrbela                                                               // 3\n                                                                                                                 // 4\n(function (factory) {                                                                                            // 5\n    if (typeof define === 'function' && define.amd) {                                                            // 6\n        define(['moment'], factory); // AMD                                                                      // 7\n    } else if (typeof exports === 'object') {                                                                    // 8\n        module.exports = factory(require('../moment')); // Node                                                  // 9\n    } else {                                                                                                     // 10\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global                 // 11\n    }                                                                                                            // 12\n}(function (moment) {                                                                                            // 13\n    var months = 'leden_칰nor_b콏ezen_duben_kv캩ten_캜erven_캜ervenec_srpen_z치콏칤_콏칤jen_listopad_prosinec'.split('_'), // 14\n        monthsShort = 'led_칰no_b콏e_dub_kv캩_캜vn_캜vc_srp_z치콏_콏칤j_lis_pro'.split('_');                              // 15\n                                                                                                                 // 16\n    function plural(n) {                                                                                         // 17\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);                                                         // 18\n    }                                                                                                            // 19\n                                                                                                                 // 20\n    function translate(number, withoutSuffix, key, isFuture) {                                                   // 21\n        var result = number + ' ';                                                                               // 22\n        switch (key) {                                                                                           // 23\n        case 's':  // a few seconds / in a few seconds / a few seconds ago                                       // 24\n            return (withoutSuffix || isFuture) ? 'p치r sekund' : 'p치r sekundami';                                 // 25\n        case 'm':  // a minute / in a minute / a minute ago                                                      // 26\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');                                 // 27\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago                                                   // 28\n            if (withoutSuffix || isFuture) {                                                                     // 29\n                return result + (plural(number) ? 'minuty' : 'minut');                                           // 30\n            } else {                                                                                             // 31\n                return result + 'minutami';                                                                      // 32\n            }                                                                                                    // 33\n            break;                                                                                               // 34\n        case 'h':  // an hour / in an hour / an hour ago                                                         // 35\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');                                 // 36\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago                                                         // 37\n            if (withoutSuffix || isFuture) {                                                                     // 38\n                return result + (plural(number) ? 'hodiny' : 'hodin');                                           // 39\n            } else {                                                                                             // 40\n                return result + 'hodinami';                                                                      // 41\n            }                                                                                                    // 42\n            break;                                                                                               // 43\n        case 'd':  // a day / in a day / a day ago                                                               // 44\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';                                                 // 45\n        case 'dd': // 9 days / in 9 days / 9 days ago                                                            // 46\n            if (withoutSuffix || isFuture) {                                                                     // 47\n                return result + (plural(number) ? 'dny' : 'dn칤');                                                // 48\n            } else {                                                                                             // 49\n                return result + 'dny';                                                                           // 50\n            }                                                                                                    // 51\n            break;                                                                                               // 52\n        case 'M':  // a month / in a month / a month ago                                                         // 53\n            return (withoutSuffix || isFuture) ? 'm캩s칤c' : 'm캩s칤cem';                                            // 54\n        case 'MM': // 9 months / in 9 months / 9 months ago                                                      // 55\n            if (withoutSuffix || isFuture) {                                                                     // 56\n                return result + (plural(number) ? 'm캩s칤ce' : 'm캩s칤c콢');                                          // 57\n            } else {                                                                                             // 58\n                return result + 'm캩s칤ci';                                                                        // 59\n            }                                                                                                    // 60\n            break;                                                                                               // 61\n        case 'y':  // a year / in a year / a year ago                                                            // 62\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';                                                // 63\n        case 'yy': // 9 years / in 9 years / 9 years ago                                                         // 64\n            if (withoutSuffix || isFuture) {                                                                     // 65\n                return result + (plural(number) ? 'roky' : 'let');                                               // 66\n            } else {                                                                                             // 67\n                return result + 'lety';                                                                          // 68\n            }                                                                                                    // 69\n            break;                                                                                               // 70\n        }                                                                                                        // 71\n    }                                                                                                            // 72\n                                                                                                                 // 73\n    return moment.defineLocale('cs', {                                                                           // 74\n        months : months,                                                                                         // 75\n        monthsShort : monthsShort,                                                                               // 76\n        monthsParse : (function (months, monthsShort) {                                                          // 77\n            var i, _monthsParse = [];                                                                            // 78\n            for (i = 0; i < 12; i++) {                                                                           // 79\n                // use custom parser to solve problem with July (캜ervenec)                                       // 80\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');               // 81\n            }                                                                                                    // 82\n            return _monthsParse;                                                                                 // 83\n        }(months, monthsShort)),                                                                                 // 84\n        weekdays : 'ned캩le_pond캩l칤_칰ter칳_st콏eda_캜tvrtek_p치tek_sobota'.split('_'),                                // 85\n        weekdaysShort : 'ne_po_칰t_st_캜t_p치_so'.split('_'),                                                       // 86\n        weekdaysMin : 'ne_po_칰t_st_캜t_p치_so'.split('_'),                                                         // 87\n        longDateFormat : {                                                                                       // 88\n            LT: 'H:mm',                                                                                          // 89\n            LTS : 'LT:ss',                                                                                       // 90\n            L : 'DD.MM.YYYY',                                                                                    // 91\n            LL : 'D. MMMM YYYY',                                                                                 // 92\n            LLL : 'D. MMMM YYYY LT',                                                                             // 93\n            LLLL : 'dddd D. MMMM YYYY LT'                                                                        // 94\n        },                                                                                                       // 95\n        calendar : {                                                                                             // 96\n            sameDay: '[dnes v] LT',                                                                              // 97\n            nextDay: '[z칤tra v] LT',                                                                             // 98\n            nextWeek: function () {                                                                              // 99\n                switch (this.day()) {                                                                            // 100\n                case 0:                                                                                          // 101\n                    return '[v ned캩li v] LT';                                                                    // 102\n                case 1:                                                                                          // 103\n                case 2:                                                                                          // 104\n                    return '[v] dddd [v] LT';                                                                    // 105\n                case 3:                                                                                          // 106\n                    return '[ve st콏edu v] LT';                                                                   // 107\n                case 4:                                                                                          // 108\n                    return '[ve 캜tvrtek v] LT';                                                                  // 109\n                case 5:                                                                                          // 110\n                    return '[v p치tek v] LT';                                                                     // 111\n                case 6:                                                                                          // 112\n                    return '[v sobotu v] LT';                                                                    // 113\n                }                                                                                                // 114\n            },                                                                                                   // 115\n            lastDay: '[v캜era v] LT',                                                                             // 116\n            lastWeek: function () {                                                                              // 117\n                switch (this.day()) {                                                                            // 118\n                case 0:                                                                                          // 119\n                    return '[minulou ned캩li v] LT';                                                              // 120\n                case 1:                                                                                          // 121\n                case 2:                                                                                          // 122\n                    return '[minul칠] dddd [v] LT';                                                               // 123\n                case 3:                                                                                          // 124\n                    return '[minulou st콏edu v] LT';                                                              // 125\n                case 4:                                                                                          // 126\n                case 5:                                                                                          // 127\n                    return '[minul칳] dddd [v] LT';                                                               // 128\n                case 6:                                                                                          // 129\n                    return '[minulou sobotu v] LT';                                                              // 130\n                }                                                                                                // 131\n            },                                                                                                   // 132\n            sameElse: 'L'                                                                                        // 133\n        },                                                                                                       // 134\n        relativeTime : {                                                                                         // 135\n            future : 'za %s',                                                                                    // 136\n            past : 'p콏ed %s',                                                                                    // 137\n            s : translate,                                                                                       // 138\n            m : translate,                                                                                       // 139\n            mm : translate,                                                                                      // 140\n            h : translate,                                                                                       // 141\n            hh : translate,                                                                                      // 142\n            d : translate,                                                                                       // 143\n            dd : translate,                                                                                      // 144\n            M : translate,                                                                                       // 145\n            MM : translate,                                                                                      // 146\n            y : translate,                                                                                       // 147\n            yy : translate                                                                                       // 148\n        },                                                                                                       // 149\n        ordinalParse : /\\d{1,2}\\./,                                                                              // 150\n        ordinal : '%d.',                                                                                         // 151\n        week : {                                                                                                 // 152\n            dow : 1, // Monday is the first day of the week.                                                     // 153\n            doy : 4  // The week that contains Jan 4th is the first week of the year.                            // 154\n        }                                                                                                        // 155\n    });                                                                                                          // 156\n}));                                                                                                             // 157\n                                                                                                                 // 158\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}