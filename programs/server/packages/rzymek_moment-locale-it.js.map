{"version":3,"sources":["meteor://ðŸ’»app/packages/rzymek_moment-locale-it/packages/rzymek_moment-locale-it.js"],"names":[],"mappingsfile":"/packages/rzymek_moment-locale-it.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// packages/rzymek:moment-locale-it/server.js                                                    //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\nglobal.moment = moment;                                                                          // 1\n                                                                                                 // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                               //\n// packages/rzymek:moment-locale-it/locale.js                                                    //\n//                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                 //\n// moment.js locale configuration                                                                // 1\n// locale : italian (it)                                                                         // 2\n// author : Lorenzo : https://github.com/aliem                                                   // 3\n// author: Mattia Larentis: https://github.com/nostalgiaz                                        // 4\n                                                                                                 // 5\n(function (factory) {                                                                            // 6\n    if (typeof define === 'function' && define.amd) {                                            // 7\n        define(['moment'], factory); // AMD                                                      // 8\n    } else if (typeof exports === 'object') {                                                    // 9\n        module.exports = factory(require('../moment')); // Node                                  // 10\n    } else {                                                                                     // 11\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global // 12\n    }                                                                                            // 13\n}(function (moment) {                                                                            // 14\n    return moment.defineLocale('it', {                                                           // 15\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),              // 17\n        weekdays : 'Domenica_LunedÃ¬_MartedÃ¬_MercoledÃ¬_GiovedÃ¬_VenerdÃ¬_Sabato'.split('_'),        // 18\n        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),                                // 19\n        weekdaysMin : 'D_L_Ma_Me_G_V_S'.split('_'),                                              // 20\n        longDateFormat : {                                                                       // 21\n            LT : 'HH:mm',                                                                        // 22\n            LTS : 'LT:ss',                                                                       // 23\n            L : 'DD/MM/YYYY',                                                                    // 24\n            LL : 'D MMMM YYYY',                                                                  // 25\n            LLL : 'D MMMM YYYY LT',                                                              // 26\n            LLLL : 'dddd, D MMMM YYYY LT'                                                        // 27\n        },                                                                                       // 28\n        calendar : {                                                                             // 29\n            sameDay: '[Oggi alle] LT',                                                           // 30\n            nextDay: '[Domani alle] LT',                                                         // 31\n            nextWeek: 'dddd [alle] LT',                                                          // 32\n            lastDay: '[Ieri alle] LT',                                                           // 33\n            lastWeek: function () {                                                              // 34\n                switch (this.day()) {                                                            // 35\n                    case 0:                                                                      // 36\n                        return '[la scorsa] dddd [alle] LT';                                     // 37\n                    default:                                                                     // 38\n                        return '[lo scorso] dddd [alle] LT';                                     // 39\n                }                                                                                // 40\n            },                                                                                   // 41\n            sameElse: 'L'                                                                        // 42\n        },                                                                                       // 43\n        relativeTime : {                                                                         // 44\n            future : function (s) {                                                              // 45\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;                         // 46\n            },                                                                                   // 47\n            past : '%s fa',                                                                      // 48\n            s : 'alcuni secondi',                                                                // 49\n            m : 'un minuto',                                                                     // 50\n            mm : '%d minuti',                                                                    // 51\n            h : 'un\\'ora',                                                                       // 52\n            hh : '%d ore',                                                                       // 53\n            d : 'un giorno',                                                                     // 54\n            dd : '%d giorni',                                                                    // 55\n            M : 'un mese',                                                                       // 56\n            MM : '%d mesi',                                                                      // 57\n            y : 'un anno',                                                                       // 58\n            yy : '%d anni'                                                                       // 59\n        },                                                                                       // 60\n        ordinalParse : /\\d{1,2}Âº/,                                                               // 61\n        ordinal: '%dÂº',                                                                          // 62\n        week : {                                                                                 // 63\n            dow : 1, // Monday is the first day of the week.                                     // 64\n            doy : 4  // The week that contains Jan 4th is the first week of the year.            // 65\n        }                                                                                        // 66\n    });                                                                                          // 67\n}));                                                                                             // 68\n                                                                                                 // 69\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}