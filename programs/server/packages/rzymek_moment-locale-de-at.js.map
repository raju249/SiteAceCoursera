{"version":3,"sources":["meteor://ðŸ’»app/packages/rzymek_moment-locale-de-at/packages/rzymek_moment-locale-de-at.js"],"names":[],"mappingsfile":"/packages/rzymek_moment-locale-de-at.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/rzymek:moment-locale-de-at/server.js                                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nglobal.moment = moment;                                                                                           // 1\n                                                                                                                  // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/rzymek:moment-locale-de-at/locale.js                                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n// moment.js locale configuration                                                                                 // 1\n// locale : austrian german (de-at)                                                                               // 2\n// author : lluchs : https://github.com/lluchs                                                                    // 3\n// author: Menelion ElensÃºle: https://github.com/Oire                                                             // 4\n// author : Martin Groller : https://github.com/MadMG                                                             // 5\n                                                                                                                  // 6\n(function (factory) {                                                                                             // 7\n    if (typeof define === 'function' && define.amd) {                                                             // 8\n        define(['moment'], factory); // AMD                                                                       // 9\n    } else if (typeof exports === 'object') {                                                                     // 10\n        module.exports = factory(require('../moment')); // Node                                                   // 11\n    } else {                                                                                                      // 12\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global                  // 13\n    }                                                                                                             // 14\n}(function (moment) {                                                                                             // 15\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {                                          // 16\n        var format = {                                                                                            // 17\n            'm': ['eine Minute', 'einer Minute'],                                                                 // 18\n            'h': ['eine Stunde', 'einer Stunde'],                                                                 // 19\n            'd': ['ein Tag', 'einem Tag'],                                                                        // 20\n            'dd': [number + ' Tage', number + ' Tagen'],                                                          // 21\n            'M': ['ein Monat', 'einem Monat'],                                                                    // 22\n            'MM': [number + ' Monate', number + ' Monaten'],                                                      // 23\n            'y': ['ein Jahr', 'einem Jahr'],                                                                      // 24\n            'yy': [number + ' Jahre', number + ' Jahren']                                                         // 25\n        };                                                                                                        // 26\n        return withoutSuffix ? format[key][0] : format[key][1];                                                   // 27\n    }                                                                                                             // 28\n                                                                                                                  // 29\n    return moment.defineLocale('de-at', {                                                                         // 30\n        months : 'JÃ¤nner_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'), // 31\n        monthsShort : 'JÃ¤n._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),                  // 32\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),                      // 33\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),                                                 // 34\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),                                                          // 35\n        longDateFormat : {                                                                                        // 36\n            LT: 'HH:mm',                                                                                          // 37\n            LTS: 'HH:mm:ss',                                                                                      // 38\n            L : 'DD.MM.YYYY',                                                                                     // 39\n            LL : 'D. MMMM YYYY',                                                                                  // 40\n            LLL : 'D. MMMM YYYY LT',                                                                              // 41\n            LLLL : 'dddd, D. MMMM YYYY LT'                                                                        // 42\n        },                                                                                                        // 43\n        calendar : {                                                                                              // 44\n            sameDay: '[Heute um] LT [Uhr]',                                                                       // 45\n            sameElse: 'L',                                                                                        // 46\n            nextDay: '[Morgen um] LT [Uhr]',                                                                      // 47\n            nextWeek: 'dddd [um] LT [Uhr]',                                                                       // 48\n            lastDay: '[Gestern um] LT [Uhr]',                                                                     // 49\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'                                                              // 50\n        },                                                                                                        // 51\n        relativeTime : {                                                                                          // 52\n            future : 'in %s',                                                                                     // 53\n            past : 'vor %s',                                                                                      // 54\n            s : 'ein paar Sekunden',                                                                              // 55\n            m : processRelativeTime,                                                                              // 56\n            mm : '%d Minuten',                                                                                    // 57\n            h : processRelativeTime,                                                                              // 58\n            hh : '%d Stunden',                                                                                    // 59\n            d : processRelativeTime,                                                                              // 60\n            dd : processRelativeTime,                                                                             // 61\n            M : processRelativeTime,                                                                              // 62\n            MM : processRelativeTime,                                                                             // 63\n            y : processRelativeTime,                                                                              // 64\n            yy : processRelativeTime                                                                              // 65\n        },                                                                                                        // 66\n        ordinalParse: /\\d{1,2}\\./,                                                                                // 67\n        ordinal : '%d.',                                                                                          // 68\n        week : {                                                                                                  // 69\n            dow : 1, // Monday is the first day of the week.                                                      // 70\n            doy : 4  // The week that contains Jan 4th is the first week of the year.                             // 71\n        }                                                                                                         // 72\n    });                                                                                                           // 73\n}));                                                                                                              // 74\n                                                                                                                  // 75\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}