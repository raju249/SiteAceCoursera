{"version":3,"sources":["meteor://💻app/packages/rzymek_moment-locale-lt/packages/rzymek_moment-locale-lt.js"],"names":[],"mappingsfile":"/packages/rzymek_moment-locale-lt.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/rzymek:moment-locale-lt/server.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nglobal.moment = moment;                                                                                               // 1\n                                                                                                                      // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/rzymek:moment-locale-lt/locale.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// moment.js locale configuration                                                                                     // 1\n// locale : Lithuanian (lt)                                                                                           // 2\n// author : Mindaugas Mozūras : https://github.com/mmozuras                                                           // 3\n                                                                                                                      // 4\n(function (factory) {                                                                                                 // 5\n    if (typeof define === 'function' && define.amd) {                                                                 // 6\n        define(['moment'], factory); // AMD                                                                           // 7\n    } else if (typeof exports === 'object') {                                                                         // 8\n        module.exports = factory(require('../moment')); // Node                                                       // 9\n    } else {                                                                                                          // 10\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global                      // 11\n    }                                                                                                                 // 12\n}(function (moment) {                                                                                                 // 13\n    var units = {                                                                                                     // 14\n        'm' : 'minutė_minutės_minutę',                                                                                // 15\n        'mm': 'minutės_minučių_minutes',                                                                              // 16\n        'h' : 'valanda_valandos_valandą',                                                                             // 17\n        'hh': 'valandos_valandų_valandas',                                                                            // 18\n        'd' : 'diena_dienos_dieną',                                                                                   // 19\n        'dd': 'dienos_dienų_dienas',                                                                                  // 20\n        'M' : 'mėnuo_mėnesio_mėnesį',                                                                                 // 21\n        'MM': 'mėnesiai_mėnesių_mėnesius',                                                                            // 22\n        'y' : 'metai_metų_metus',                                                                                     // 23\n        'yy': 'metai_metų_metus'                                                                                      // 24\n    },                                                                                                                // 25\n    weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'); // 26\n                                                                                                                      // 27\n    function translateSeconds(number, withoutSuffix, key, isFuture) {                                                 // 28\n        if (withoutSuffix) {                                                                                          // 29\n            return 'kelios sekundės';                                                                                 // 30\n        } else {                                                                                                      // 31\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';                                                  // 32\n        }                                                                                                             // 33\n    }                                                                                                                 // 34\n                                                                                                                      // 35\n    function translateSingular(number, withoutSuffix, key, isFuture) {                                                // 36\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);                            // 37\n    }                                                                                                                 // 38\n                                                                                                                      // 39\n    function special(number) {                                                                                        // 40\n        return number % 10 === 0 || (number > 10 && number < 20);                                                     // 41\n    }                                                                                                                 // 42\n                                                                                                                      // 43\n    function forms(key) {                                                                                             // 44\n        return units[key].split('_');                                                                                 // 45\n    }                                                                                                                 // 46\n                                                                                                                      // 47\n    function translate(number, withoutSuffix, key, isFuture) {                                                        // 48\n        var result = number + ' ';                                                                                    // 49\n        if (number === 1) {                                                                                           // 50\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);                               // 51\n        } else if (withoutSuffix) {                                                                                   // 52\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);                                        // 53\n        } else {                                                                                                      // 54\n            if (isFuture) {                                                                                           // 55\n                return result + forms(key)[1];                                                                        // 56\n            } else {                                                                                                  // 57\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);                                    // 58\n            }                                                                                                         // 59\n        }                                                                                                             // 60\n    }                                                                                                                 // 61\n                                                                                                                      // 62\n    function relativeWeekDay(moment, format) {                                                                        // 63\n        var nominative = format.indexOf('dddd HH:mm') === -1,                                                         // 64\n            weekDay = weekDays[moment.day()];                                                                         // 65\n                                                                                                                      // 66\n        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';                                 // 67\n    }                                                                                                                 // 68\n                                                                                                                      // 69\n    return moment.defineLocale('lt', {                                                                                // 70\n        months : 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),                                   // 72\n        weekdays : relativeWeekDay,                                                                                   // 73\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),                                                     // 74\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),                                                                    // 75\n        longDateFormat : {                                                                                            // 76\n            LT : 'HH:mm',                                                                                             // 77\n            LTS : 'LT:ss',                                                                                            // 78\n            L : 'YYYY-MM-DD',                                                                                         // 79\n            LL : 'YYYY [m.] MMMM D [d.]',                                                                             // 80\n            LLL : 'YYYY [m.] MMMM D [d.], LT [val.]',                                                                 // 81\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, LT [val.]',                                                          // 82\n            l : 'YYYY-MM-DD',                                                                                         // 83\n            ll : 'YYYY [m.] MMMM D [d.]',                                                                             // 84\n            lll : 'YYYY [m.] MMMM D [d.], LT [val.]',                                                                 // 85\n            llll : 'YYYY [m.] MMMM D [d.], ddd, LT [val.]'                                                            // 86\n        },                                                                                                            // 87\n        calendar : {                                                                                                  // 88\n            sameDay : '[Šiandien] LT',                                                                                // 89\n            nextDay : '[Rytoj] LT',                                                                                   // 90\n            nextWeek : 'dddd LT',                                                                                     // 91\n            lastDay : '[Vakar] LT',                                                                                   // 92\n            lastWeek : '[Praėjusį] dddd LT',                                                                          // 93\n            sameElse : 'L'                                                                                            // 94\n        },                                                                                                            // 95\n        relativeTime : {                                                                                              // 96\n            future : 'po %s',                                                                                         // 97\n            past : 'prieš %s',                                                                                        // 98\n            s : translateSeconds,                                                                                     // 99\n            m : translateSingular,                                                                                    // 100\n            mm : translate,                                                                                           // 101\n            h : translateSingular,                                                                                    // 102\n            hh : translate,                                                                                           // 103\n            d : translateSingular,                                                                                    // 104\n            dd : translate,                                                                                           // 105\n            M : translateSingular,                                                                                    // 106\n            MM : translate,                                                                                           // 107\n            y : translateSingular,                                                                                    // 108\n            yy : translate                                                                                            // 109\n        },                                                                                                            // 110\n        ordinalParse: /\\d{1,2}-oji/,                                                                                  // 111\n        ordinal : function (number) {                                                                                 // 112\n            return number + '-oji';                                                                                   // 113\n        },                                                                                                            // 114\n        week : {                                                                                                      // 115\n            dow : 1, // Monday is the first day of the week.                                                          // 116\n            doy : 4  // The week that contains Jan 4th is the first week of the year.                                 // 117\n        }                                                                                                             // 118\n    });                                                                                                               // 119\n}));                                                                                                                  // 120\n                                                                                                                      // 121\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}