{"version":3,"sources":["meteor://üíªapp/packages/rzymek_moment-locale-az/packages/rzymek_moment-locale-az.js"],"names":[],"mappingsyH","file":"/packages/rzymek_moment-locale-az.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/rzymek:moment-locale-az/server.js                                                               //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nglobal.moment = moment;                                                                                     // 1\n                                                                                                            // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/rzymek:moment-locale-az/locale.js                                                               //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\n// moment.js locale configuration                                                                           // 1\n// locale : azerbaijani (az)                                                                                // 2\n// author : topchiyev : https://github.com/topchiyev                                                        // 3\n                                                                                                            // 4\n(function (factory) {                                                                                       // 5\n    if (typeof define === 'function' && define.amd) {                                                       // 6\n        define(['moment'], factory); // AMD                                                                 // 7\n    } else if (typeof exports === 'object') {                                                               // 8\n        module.exports = factory(require('../moment')); // Node                                             // 9\n    } else {                                                                                                // 10\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global            // 11\n    }                                                                                                       // 12\n}(function (moment) {                                                                                       // 13\n    var suffixes = {                                                                                        // 14\n        1: '-inci',                                                                                         // 15\n        5: '-inci',                                                                                         // 16\n        8: '-inci',                                                                                         // 17\n        70: '-inci',                                                                                        // 18\n        80: '-inci',                                                                                        // 19\n                                                                                                            // 20\n        2: '-nci',                                                                                          // 21\n        7: '-nci',                                                                                          // 22\n        20: '-nci',                                                                                         // 23\n        50: '-nci',                                                                                         // 24\n                                                                                                            // 25\n        3: '-√ºnc√º',                                                                                         // 26\n        4: '-√ºnc√º',                                                                                         // 27\n        100: '-√ºnc√º',                                                                                       // 28\n                                                                                                            // 29\n        6: '-ncƒ±',                                                                                          // 30\n                                                                                                            // 31\n        9: '-uncu',                                                                                         // 32\n        10: '-uncu',                                                                                        // 33\n        30: '-uncu',                                                                                        // 34\n                                                                                                            // 35\n        60: '-ƒ±ncƒ±',                                                                                        // 36\n        90: '-ƒ±ncƒ±'                                                                                         // 37\n    };                                                                                                      // 38\n    return moment.defineLocale('az', {                                                                      // 39\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'), // 40\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),                         // 41\n        weekdays : 'Bazar_Bazar ert…ôsi_√á…ôr≈ü…ônb…ô ax≈üamƒ±_√á…ôr≈ü…ônb…ô_C√ºm…ô ax≈üamƒ±_C√ºm…ô_≈û…ônb…ô'.split('_'),         // 42\n        weekdaysShort : 'Baz_BzE_√áAx_√á…ôr_CAx_C√ºm_≈û…ôn'.split('_'),                                           // 43\n        weekdaysMin : 'Bz_BE_√áA_√á…ô_CA_C√º_≈û…ô'.split('_'),                                                    // 44\n        longDateFormat : {                                                                                  // 45\n            LT : 'HH:mm',                                                                                   // 46\n            LTS : 'LT:ss',                                                                                  // 47\n            L : 'DD.MM.YYYY',                                                                               // 48\n            LL : 'D MMMM YYYY',                                                                             // 49\n            LLL : 'D MMMM YYYY LT',                                                                         // 50\n            LLLL : 'dddd, D MMMM YYYY LT'                                                                   // 51\n        },                                                                                                  // 52\n        calendar : {                                                                                        // 53\n            sameDay : '[bug√ºn saat] LT',                                                                    // 54\n            nextDay : '[sabah saat] LT',                                                                    // 55\n            nextWeek : '[g…ôl…ôn h…ôft…ô] dddd [saat] LT',                                                      // 56\n            lastDay : '[d√ºn…ôn] LT',                                                                         // 57\n            lastWeek : '[ke√ß…ôn h…ôft…ô] dddd [saat] LT',                                                      // 58\n            sameElse : 'L'                                                                                  // 59\n        },                                                                                                  // 60\n        relativeTime : {                                                                                    // 61\n            future : '%s sonra',                                                                            // 62\n            past : '%s …ôvv…ôl',                                                                              // 63\n            s : 'birne√ß…ô saniyy…ô',                                                                          // 64\n            m : 'bir d…ôqiq…ô',                                                                               // 65\n            mm : '%d d…ôqiq…ô',                                                                               // 66\n            h : 'bir saat',                                                                                 // 67\n            hh : '%d saat',                                                                                 // 68\n            d : 'bir g√ºn',                                                                                  // 69\n            dd : '%d g√ºn',                                                                                  // 70\n            M : 'bir ay',                                                                                   // 71\n            MM : '%d ay',                                                                                   // 72\n            y : 'bir il',                                                                                   // 73\n            yy : '%d il'                                                                                    // 74\n        },                                                                                                  // 75\n        meridiemParse: /gec…ô|s…ôh…ôr|g√ºnd√ºz|ax≈üam/,                                                           // 76\n        isPM : function (input) {                                                                           // 77\n            return /^(g√ºnd√ºz|ax≈üam)$/.test(input);                                                          // 78\n        },                                                                                                  // 79\n        meridiem : function (hour, minute, isLower) {                                                       // 80\n            if (hour < 4) {                                                                                 // 81\n                return 'gec…ô';                                                                              // 82\n            } else if (hour < 12) {                                                                         // 83\n                return 's…ôh…ôr';                                                                             // 84\n            } else if (hour < 17) {                                                                         // 85\n                return 'g√ºnd√ºz';                                                                            // 86\n            } else {                                                                                        // 87\n                return 'ax≈üam';                                                                             // 88\n            }                                                                                               // 89\n        },                                                                                                  // 90\n        ordinalParse: /\\d{1,2}-(ƒ±ncƒ±|inci|nci|√ºnc√º|ncƒ±|uncu)/,                                              // 91\n        ordinal : function (number) {                                                                       // 92\n            if (number === 0) {  // special case for zero                                                   // 93\n                return number + '-ƒ±ncƒ±';                                                                    // 94\n            }                                                                                               // 95\n            var a = number % 10,                                                                            // 96\n                b = number % 100 - a,                                                                       // 97\n                c = number >= 100 ? 100 : null;                                                             // 98\n                                                                                                            // 99\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);                                    // 100\n        },                                                                                                  // 101\n        week : {                                                                                            // 102\n            dow : 1, // Monday is the first day of the week.                                                // 103\n            doy : 7  // The week that contains Jan 1st is the first week of the year.                       // 104\n        }                                                                                                   // 105\n    });                                                                                                     // 106\n}));                                                                                                        // 107\n                                                                                                            // 108\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}