{"version":3,"sources":["meteor://üíªapp/packages/rzymek_moment-locale-fi/packages/rzymek_moment-locale-fi.js"],"names":[],"mappingsuH","file":"/packages/rzymek_moment-locale-fi.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/rzymek:moment-locale-fi/server.js                                                             //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nglobal.moment = moment;                                                                                   // 1\n                                                                                                          // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/rzymek:moment-locale-fi/locale.js                                                             //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\n// moment.js locale configuration                                                                         // 1\n// locale : finnish (fi)                                                                                  // 2\n// author : Tarmo Aidantausta : https://github.com/bleadof                                                // 3\n                                                                                                          // 4\n(function (factory) {                                                                                     // 5\n    if (typeof define === 'function' && define.amd) {                                                     // 6\n        define(['moment'], factory); // AMD                                                               // 7\n    } else if (typeof exports === 'object') {                                                             // 8\n        module.exports = factory(require('../moment')); // Node                                           // 9\n    } else {                                                                                              // 10\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global          // 11\n    }                                                                                                     // 12\n}(function (moment) {                                                                                     // 13\n    var numbersPast = 'nolla yksi kaksi kolme nelj√§ viisi kuusi seitsem√§n kahdeksan yhdeks√§n'.split(' '), // 14\n        numbersFuture = [                                                                                 // 15\n            'nolla', 'yhden', 'kahden', 'kolmen', 'nelj√§n', 'viiden', 'kuuden',                           // 16\n            numbersPast[7], numbersPast[8], numbersPast[9]                                                // 17\n        ];                                                                                                // 18\n                                                                                                          // 19\n    function translate(number, withoutSuffix, key, isFuture) {                                            // 20\n        var result = '';                                                                                  // 21\n        switch (key) {                                                                                    // 22\n        case 's':                                                                                         // 23\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';                                    // 24\n        case 'm':                                                                                         // 25\n            return isFuture ? 'minuutin' : 'minuutti';                                                    // 26\n        case 'mm':                                                                                        // 27\n            result = isFuture ? 'minuutin' : 'minuuttia';                                                 // 28\n            break;                                                                                        // 29\n        case 'h':                                                                                         // 30\n            return isFuture ? 'tunnin' : 'tunti';                                                         // 31\n        case 'hh':                                                                                        // 32\n            result = isFuture ? 'tunnin' : 'tuntia';                                                      // 33\n            break;                                                                                        // 34\n        case 'd':                                                                                         // 35\n            return isFuture ? 'p√§iv√§n' : 'p√§iv√§';                                                         // 36\n        case 'dd':                                                                                        // 37\n            result = isFuture ? 'p√§iv√§n' : 'p√§iv√§√§';                                                      // 38\n            break;                                                                                        // 39\n        case 'M':                                                                                         // 40\n            return isFuture ? 'kuukauden' : 'kuukausi';                                                   // 41\n        case 'MM':                                                                                        // 42\n            result = isFuture ? 'kuukauden' : 'kuukautta';                                                // 43\n            break;                                                                                        // 44\n        case 'y':                                                                                         // 45\n            return isFuture ? 'vuoden' : 'vuosi';                                                         // 46\n        case 'yy':                                                                                        // 47\n            result = isFuture ? 'vuoden' : 'vuotta';                                                      // 48\n            break;                                                                                        // 49\n        }                                                                                                 // 50\n        result = verbalNumber(number, isFuture) + ' ' + result;                                           // 51\n        return result;                                                                                    // 52\n    }                                                                                                     // 53\n                                                                                                          // 54\n    function verbalNumber(number, isFuture) {                                                             // 55\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;           // 56\n    }                                                                                                     // 57\n                                                                                                          // 58\n    return moment.defineLocale('fi', {                                                                    // 59\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kes√§kuu_hein√§kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kes√§_hein√§_elo_syys_loka_marras_joulu'.split('_'),  // 61\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),       // 62\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),                                                // 63\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),                                                  // 64\n        longDateFormat : {                                                                                // 65\n            LT : 'HH.mm',                                                                                 // 66\n            LTS : 'HH.mm.ss',                                                                             // 67\n            L : 'DD.MM.YYYY',                                                                             // 68\n            LL : 'Do MMMM[ta] YYYY',                                                                      // 69\n            LLL : 'Do MMMM[ta] YYYY, [klo] LT',                                                           // 70\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] LT',                                                    // 71\n            l : 'D.M.YYYY',                                                                               // 72\n            ll : 'Do MMM YYYY',                                                                           // 73\n            lll : 'Do MMM YYYY, [klo] LT',                                                                // 74\n            llll : 'ddd, Do MMM YYYY, [klo] LT'                                                           // 75\n        },                                                                                                // 76\n        calendar : {                                                                                      // 77\n            sameDay : '[t√§n√§√§n] [klo] LT',                                                                // 78\n            nextDay : '[huomenna] [klo] LT',                                                              // 79\n            nextWeek : 'dddd [klo] LT',                                                                   // 80\n            lastDay : '[eilen] [klo] LT',                                                                 // 81\n            lastWeek : '[viime] dddd[na] [klo] LT',                                                       // 82\n            sameElse : 'L'                                                                                // 83\n        },                                                                                                // 84\n        relativeTime : {                                                                                  // 85\n            future : '%s p√§√§st√§',                                                                         // 86\n            past : '%s sitten',                                                                           // 87\n            s : translate,                                                                                // 88\n            m : translate,                                                                                // 89\n            mm : translate,                                                                               // 90\n            h : translate,                                                                                // 91\n            hh : translate,                                                                               // 92\n            d : translate,                                                                                // 93\n            dd : translate,                                                                               // 94\n            M : translate,                                                                                // 95\n            MM : translate,                                                                               // 96\n            y : translate,                                                                                // 97\n            yy : translate                                                                                // 98\n        },                                                                                                // 99\n        ordinalParse: /\\d{1,2}\\./,                                                                        // 100\n        ordinal : '%d.',                                                                                  // 101\n        week : {                                                                                          // 102\n            dow : 1, // Monday is the first day of the week.                                              // 103\n            doy : 4  // The week that contains Jan 4th is the first week of the year.                     // 104\n        }                                                                                                 // 105\n    });                                                                                                   // 106\n}));                                                                                                      // 107\n                                                                                                          // 108\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}