{"version":3,"sources":["meteor://ðŸ’»app/rajendra/meteorshim.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;;;AAGtB,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,WAAW,CAAC;AACpE,OAAO,CAAC,GAAG,CAAC,SAAS,GAAI,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAK,kCAAkC,CAAC;AACtI,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,IAAI,CAAC;AAC7D,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,WAAW,CAAC;;;AAGrE,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACtD,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACzC,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;AAE/C,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE;;;AAGvC,MAAG,CAAC,GAAG,EACP;;AAEE,WAAO,CAAC,WAAW,CAAC,CAAC;GACtB,MAAI;AACH,QAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,QAAI,gBAAgB,GAAG,i9DAAi9D,GAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAC,sBAAsB,GAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAC,uOAAuO,CAAC;AACpyE,QAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;AACtC,SAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,cAAc,EAAE,WAAW,EAAC,CAAC,CAAC;AAClD,SAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;KAC3B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC/C,WAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;GACzF;CACA,CAAC,CAAC,sE","file":"/rajendra/meteorshim.js","sourcesContent":["var fs = require('fs')\n\n// Setup env\nprocess.env.ROOT_URL = process.env.OPENSHIFT_APP_DNS || \"localhost\";\nprocess.env.MONGO_URL = (process.env.OPENSHIFT_MONGODB_DB_URL + process.env.OPENSHIFT_APP_NAME) || \"mongodb://localhost:27017/meteor\";\nprocess.env.PORT = process.env.OPENSHIFT_NODEJS_PORT || 8000;\nprocess.env.BIND_IP = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\n\n// Show connection details on startup\nconsole.log(\"MONGO_URL IS: \" + process.env.MONGO_URL);\nconsole.log(\"ROOT_URL IS: \" + process.env.ROOT_URL);\nconsole.log(\"PORT: \" + process.env.PORT);\nconsole.log(\"BIND_IP: \" + process.env.BIND_IP);\n\nfs.stat('main.js', function(err, stat) {\n// if the meteor application bundle is missing, \n// return additional installation instructions:\nif(!err)\n{\n  // Start meteor server\n  require('./main.js');\n}else{\n  var http = require('http');\n  // Start a server that returns a short list of instructions\n  var dev_instructions = \"<body><h1>Half way there! - Next Steps&hellip;</h2><h2>Create a Meteor.js example project</h2> <p>To see a list of all available meteor.js example projects, type <code>meteor create --list</code>.</p> <p>In this guide, we'll use the meteor.js \\\"leaderboard\\\" example:</p> <pre><code>meteor create --example leaderboard </code></pre> <p>See <a href=\\\"http://meteor.com/examples/\\\">http://meteor.com/examples/</a> to learn about what other example applications are available.  Feel free to try them all.</p> <h2>Bundle and merge your meteor.js code</h2> <p>Bundle up your meteor application source:</p> <pre><code>cd leaderboard # if you chose the leaderboard example \\nmeteor bundle bundle.tar.gz # to prep for deployment </code></pre> <p>Next, you'll need to extract the resulting code into your OpenShift application folder (minus the \\\"bundle/\\\" folder wrapper that Meteor will automatically include).  Use the <code>-k</code> flag when extracting to prevent the existing DB connection code from being overwritten during this merge process.</p> <p>If you are developing on Linux, or using GNU tar, this command should work:</p> <pre><code>tar -xvf bundle.tar.gz --transform 's|^bundle/||' -C ../meteor/ </code></pre> <p>For Mac or BSD-based operating systems:</p> <pre><code>tar -xvf bundle.tar.gz -s '/^bundle//' -C ../meteor/ </code></pre> <p>The above example assumes that you named your OpenShift application \\\"meteor\\\", as shown in the <code>rhc app create</code> step.  And, that your OpenShift application source code is available at this relative path: <code>../meteor</code></p> <p>Add these new files to your OpenShift application's Git repo:</p> <pre><code>cd ../meteor \\ngit add . \\ngit commit -am \\\"Adding a meteor.js application bundle\\\" </code></pre> <h2>Deploy to OpenShift</h2> <p>Then, push the new code to OpenShift to deploy your meteor.js application bundle:</p> <pre><code>git push </code></pre> <p>That's it! Check out your new Meteor.js application at:</p> <a href='http://\"+process.env.OPENSHIFT_APP_DNS+\"'><pre><code>http://\"+process.env.OPENSHIFT_APP_DNS+\"</code></a></pre><p>The latest version of this guide is available at: <a href='https://github.com/openshift-quickstart/openshift-meteorjs-quickstart'>http://github.com/openshift-quickstart/openshift-meteorjs-quickstart</a></body>\";\n  http.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.end(dev_instructions);\n}).listen(process.env.PORT, process.env.BIND_IP);\n  console.log('Server running at http://' + process.env.BIND_IP + \":\" + process.env.PORT); \n}\n});"]}